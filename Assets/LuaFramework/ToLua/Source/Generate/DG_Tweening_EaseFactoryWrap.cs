//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DG_Tweening_EaseFactoryWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DG.Tweening.EaseFactory), typeof(System.Object));
		L.RegFunction("StopMotion", StopMotion);
		L.RegFunction("New", _CreateDG_Tweening_EaseFactory);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDG_Tweening_EaseFactory(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				DG.Tweening.EaseFactory obj = new DG.Tweening.EaseFactory();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DG.Tweening.EaseFactory.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopMotion(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(DG.Tweening.EaseFunction)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				DG.Tweening.EaseFunction arg1 = null;
				LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

				if (funcType2 != LuaTypes.LUA_TFUNCTION)
				{
					 arg1 = (DG.Tweening.EaseFunction)ToLua.ToObject(L, 2);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 2);
					arg1 = DelegateFactory.CreateDelegate(typeof(DG.Tweening.EaseFunction), func) as DG.Tweening.EaseFunction;
				}

				DG.Tweening.EaseFunction o = DG.Tweening.EaseFactory.StopMotion(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.AnimationCurve)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.AnimationCurve arg1 = (UnityEngine.AnimationCurve)ToLua.ToObject(L, 2);
				DG.Tweening.EaseFunction o = DG.Tweening.EaseFactory.StopMotion(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(System.Nullable<DG.Tweening.Ease>)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				System.Nullable<DG.Tweening.Ease> arg1 = (System.Nullable<DG.Tweening.Ease>)ToLua.ToObject(L, 2);
				DG.Tweening.EaseFunction o = DG.Tweening.EaseFactory.StopMotion(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DG.Tweening.EaseFactory.StopMotion");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

