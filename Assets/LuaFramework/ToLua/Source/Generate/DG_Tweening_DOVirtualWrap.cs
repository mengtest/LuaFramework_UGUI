//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DG_Tweening_DOVirtualWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("DOVirtual");
		L.RegFunction("Float", Float);
		L.RegFunction("EasedValue", EasedValue);
		L.RegFunction("DelayedCall", DelayedCall);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Float(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
			DG.Tweening.TweenCallback<float> arg3 = null;
			LuaTypes funcType4 = LuaDLL.lua_type(L, 4);

			if (funcType4 != LuaTypes.LUA_TFUNCTION)
			{
				 arg3 = (DG.Tweening.TweenCallback<float>)ToLua.CheckObject(L, 4, typeof(DG.Tweening.TweenCallback<float>));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 4);
				arg3 = DelegateFactory.CreateDelegate(typeof(DG.Tweening.TweenCallback<float>), func) as DG.Tweening.TweenCallback<float>;
			}

			DG.Tweening.Tweener o = DG.Tweening.DOVirtual.Float(arg0, arg1, arg2, arg3);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EasedValue(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(float), typeof(float), typeof(float), typeof(UnityEngine.AnimationCurve)))
			{
				float arg0 = (float)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.AnimationCurve arg3 = (UnityEngine.AnimationCurve)ToLua.ToObject(L, 4);
				float o = DG.Tweening.DOVirtual.EasedValue(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(float), typeof(float), typeof(float), typeof(DG.Tweening.Ease)))
			{
				float arg0 = (float)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float o = DG.Tweening.DOVirtual.EasedValue(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(float), typeof(float), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				float arg0 = (float)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				float o = DG.Tweening.DOVirtual.EasedValue(arg0, arg1, arg2, arg3, arg4);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(float), typeof(float), typeof(float), typeof(DG.Tweening.Ease), typeof(float), typeof(float)))
			{
				float arg0 = (float)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				float o = DG.Tweening.DOVirtual.EasedValue(arg0, arg1, arg2, arg3, arg4, arg5);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DG.Tweening.DOVirtual.EasedValue");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DelayedCall(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			DG.Tweening.TweenCallback arg1 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (DG.Tweening.TweenCallback)ToLua.CheckObject(L, 2, typeof(DG.Tweening.TweenCallback));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg1 = DelegateFactory.CreateDelegate(typeof(DG.Tweening.TweenCallback), func) as DG.Tweening.TweenCallback;
			}

			bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
			DG.Tweening.Tween o = DG.Tweening.DOVirtual.DelayedCall(arg0, arg1, arg2);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

